<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.relation.tag.mapper.primary.UgcLabelDataAnalysisMapper">
    <sql id="TableName">ugc_label_data_analysis</sql>

    <select id="selectPendingCountByAddress" resultType="java.lang.Integer">
        select count(1) from
        <include refid="TableName"/>
        where removed = false and address=#{address} and status in ('TODO','DOING')
    </select>

    <select id="selectPendingCount" resultType="java.lang.Integer">
        select count(1) from
        <include refid="TableName"/>
        where removed = false and status in ('TODO','DOING')
    </select>


    <select id="selectsByAddress">
        select id,
        name,
        address,
        api_level,
        mode,
        labels,
        status,
        address_image_text,
        analysis_address_num,
        analysis_at,
        created_at,
        updated_at,
        removed,
        type,
        "sql"
        from
        <include refid="TableName"/>
        where removed = false and status != 'CANCEL'
    </select>

    <update id="cancelDataAnalysis">
        update
        <include refid="TableName"/>
        set status=#{param.status},download_status = #{param.downloadStatus}, name = concat(name, '_', id), updated_at = CURRENT_TIMESTAMP
        where id = #{param.id} and address=#{param.address} and status = 'TODO'
    </update>

    <select id="selectHandleEntity" resultType="com.relation.tag.entity.UgcLabelDataAnalysis">
        select id,
        name,
        address,
        api_level,
        mode,
        labels,
        status,
        analysis_result,
        created_at,
        updated_at,
        removed,
        redo,
        restore_vip_usage,
        type,
        "sql"
        from
        <include refid="TableName"/>
        where removed = false and status = #{status}
        <if test="updatedAt != null">
            and updated_at <![CDATA[<=]]> #{updatedAt}
        </if>
        order by updated_at ASC limit 20
    </select>

    <update id="updateDoingDataAnalysis">
        update
        <include refid="TableName"/>
        set status='DOING',updated_at=CURRENT_TIMESTAMP
        where id in
        (<foreach collection="list" item="item" separator=",">
        #{item.id}
    </foreach>) and status = 'TODO'
    </update>

    <update id="updateResult">
        update
        <include refid="TableName"/>
        set status=#{param.status},
        <if test="param.restoreVipUsage != null">
            restore_vip_usage = #{param.restoreVipUsage}
        </if>
        analysis_result=#{param.analysisResult}
        where id = #{param.id} and status = 'DOING'
    </update>

    <update id="resetRecord2TODO">
        update
        <include refid="TableName"/>
        set status = 'TODO'
        where status = 'DOING' and updated_at <![CDATA[<=]]> #{updatedAt}
    </update>


    <select id="selectTimeoutRecord" resultType="com.relation.tag.entity.UgcLabelDataAnalysis">
        select id,
               name,
               address,
               api_level,
               mode,
               labels,
               status,
               analysis_result,
               created_at,
               updated_at,
               removed,
               analysis_at,
               analysis_address_num,
               address_image_text,
               type,
               "sql"
        from ugc_label_data_analysis
        where updated_at + '${timeoutHour} hour' <![CDATA[<=]]> current_timestamp           and download_status = 'PENDING'
    </select>




    <insert id="insertBatchData" useGeneratedKeys="true" keyProperty="ugcLabelDataAnalysisId" >
        insert into ugc_label_data_analysis(name,
        address,
        api_level,
        mode,
        labels,
        status,
        analysis_result,
        type,
        "sql")
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.name},'suggest-system-user','PROFESSIONAL','FUZZY','','TODO',null ,'SUGGEST','')
        </foreach>
    </insert>
</mapper>