# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/

version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "prepare"
  - "devDeploy"
  - "stagDeploy"
  - "prodDeploy"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "RelationLab/relation-tag"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "${{CF_BRANCH}}"
    git: "github"
    stage: "clone"

  pulumiUp:
    title: "Pulumi Up"
    stage: prepare
    image: "pulumi/pulumi-nodejs:latest"
    working_directory: "${{clone}}"
    commands:
      - npm install
      - pulumi login
      - pulumi stack select prod
      - cf_export AWS_ECR_REPO_NAME=$(pulumi stack output ecrRepositoryName)
      - cf_export AWS_ECR_REPO_URL=$(pulumi stack output ecrRepositoryUrl)
      - cf_export WIRED_GP_CLUSTER_AWS_SECRET_ID=$(pulumi stack output wiredGpClusterSecretId)
      - cf_export WIRED_GP_CLUSTER_DOMIN=$(pulumi stack output wiredGpClusterDomain)

  prepareArtifacts:
    type: "parallel"
    stage: prepare
    steps:
      fetchSecrets:
        title: "Fetch AWS Secrets"
        type: aws-secrets-manager
        arguments:
          AWS_DEFAULT_REGION: "${{AWS_DEFAULT_REGION}}"
          secrets:
            - secret_arn: "${{WIRED_GP_CLUSTER_AWS_SECRET_ID}}"
              key: "gpAdminPassword"
              store_in: WIRED_GP_CLUSTER_ADMIN_PASSWORD
      buildWiredTagImage:
        title: "Build Wired Tag Docker Image"
        type: "build"
        working_directory: "${{clone}}/app"
        image_name: "${{AWS_ECR_REPO_NAME}}"
        dockerfile: "Dockerfile"
        tag: "${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"

  # devDeploy:
  #   title: "Helm install wired-tag"
  #   stage: devDeploy
  #   type: helm
  #   working_directory: "${{clone}}"
  #   arguments:
  #     chart_name: helm
  #     release_name: wired-tag
  #     helm_version: 3.9.0
  #     namespace: dev
  #     kube_context: wired-eks-prod
  #     custom_values:
  #       - "image_repository=${{AWS_ECR_REPO_URL}}"
  #       - "image_tag=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
  #       - "config_env=dev"
  #       - "greenplum_host=${{WIRED_GP_CLUSTER_DOMIN}}"
  #       - "greenplum_password=${{WIRED_GP_CLUSTER_ADMIN_PASSWORD}}"

  # askForStagPermission:
  #   type: pending-approval
  #   stage: stagDeploy
  #   title: Deploy to staging?

  # stagDeploy:
  #   title: "Helm install wired-tag"
  #   stage: stagDeploy
  #   type: helm
  #   working_directory: "${{clone}}"
  #   arguments:
  #     chart_name: helm
  #     release_name: wired-tag
  #     helm_version: 3.9.0
  #     namespace: stag
  #     kube_context: wired-eks-prod
  #     custom_values:
  #       - "image_repository=${{AWS_ECR_REPO_URL}}"
  #       - "image_tag=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
  #       - "config_env=stag"
  #       - "greenplum_host=${{WIRED_GP_CLUSTER_DOMIN}}"
  #       - "greenplum_password=${{WIRED_GP_CLUSTER_ADMIN_PASSWORD}}"

  askForProdPermission:
    type: pending-approval
    stage: prodDeploy
    title: Deploy to produtcion?

  prodUninstall:
    title: "Helm uninsall wired-tag"
    image: "thorstenhans/helm3"
    stage: prodDeploy
    commands:
      - kubectl config use-context wired-eks-prod
      - helm uninstall -n prod wired-tag || exit_code=$?

  prodDeploy:
    title: "Helm install wired-tag"
    stage: prodDeploy
    type: helm
    working_directory: "${{clone}}"
    arguments:
      chart_name: helm
      release_name: wired-tag
      helm_version: 3.9.0
      namespace: prod
      kube_context: wired-eks-prod
      custom_values:
        - "image_repository=${{AWS_ECR_REPO_URL}}"
        - "image_tag=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
        - "config_env=prod"
        - "greenplum_host=${{WIRED_GP_CLUSTER_DOMIN}}"
        - "greenplum_password=${{WIRED_GP_CLUSTER_ADMIN_PASSWORD}}"
